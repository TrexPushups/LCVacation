{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction FetchDataComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Days Worked is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, FetchDataComponent_div_17_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.DaysWorked.errors.required);\n  }\n}\nfunction FetchDataComponent_p_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_table_25_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 22);\n    i0.ɵɵlistener(\"onclick\", function FetchDataComponent_table_25_tr_16_Template_button_onclick_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const emp_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.setModalId(emp_r5.id));\n    });\n    i0.ɵɵtext(13, \"Work\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 23);\n    i0.ɵɵtext(16, \"Take Vacation\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const emp_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r5.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r5.employeeType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r5.vacationDays);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r5.daysWorked);\n  }\n}\nfunction FetchDataComponent_table_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 20)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Vacation days\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Days Worked\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"th\")(14, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"tbody\");\n    i0.ɵɵtemplate(16, FetchDataComponent_table_25_tr_16_Template, 17, 5, \"tr\", 21);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.employees);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class FetchDataComponent {\n  constructor(formBuilder, http, baseUrl) {\n    this.formBuilder = formBuilder;\n    this.employees = [];\n    //Form Validables\n    this.modalId = 0;\n    this.displayWorkModal = false;\n    this.submitted = false;\n    http.get(baseUrl + 'Employee').subscribe(result => {\n      this.employees = result;\n    }, error => console.error(error));\n  }\n  get f() {\n    return this.WorkForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.WorkForm.invalid) {\n      return;\n    }\n    //True if all the fields are filled\n    if (this.submitted) {\n      alert(\"Great!!\");\n    }\n  }\n  ngOnInit() {\n    //Add User form validations\n    this.WorkForm = this.formBuilder.group({\n      DaysWorked: ['', [Validators.required, Validators.max(260), Validators.min(0)]]\n    });\n  }\n  showDialog(id) {\n    this.displayWorkModal = true;\n    this.modalId = id;\n  }\n  work(id) {}\n  takeVacation(id) {}\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 26,\n  vars: 8,\n  consts: [[\"id\", \"tableLabel\"], [\"id\", \"WorkModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"WorkModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"WorkModalLabel\", 1, \"modal-title\", \"text-danger\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"DaysWorked\", 1, \"form-label\"], [\"type\", \"number\", \"formControlName\", \"DaysWorked\", \"id\", \"DaysWorked\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-warning\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#WorkModal\", 3, \"onclick\"], [1, \"btn\", \"btn-primary\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Employees\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"Sample Employees for exercise\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"div\", 3)(7, \"div\", 4)(8, \"h5\", 5);\n      i0.ɵɵtext(9, \"Work Entry Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"button\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_Template_form_ngSubmit_12_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(13, \"div\", 9)(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Days Worked\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 11);\n      i0.ɵɵtemplate(17, FetchDataComponent_div_17_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementStart(18, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function FetchDataComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.modalId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 14);\n      i0.ɵɵtext(20, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 15)(22, \"button\", 16);\n      i0.ɵɵtext(23, \"Close\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(24, FetchDataComponent_p_24_Template, 3, 0, \"p\", 17);\n      i0.ɵɵtemplate(25, FetchDataComponent_table_25_Template, 17, 1, \"table\", 18);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"formGroup\", ctx.WorkForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.submitted && ctx.f.DaysWorked.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.DaysWorked.errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.modalId);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.employees == null ? null : ctx.employees.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.employees.length);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICgBrDC,2BAA0C;IAAAA,uCAAuB;IAAAA,iBAAM;;;;;IADzEA,+BAAuE;IACrEA,2EAAuE;IACzEA,iBAAM;;;;IADEA,eAAkC;IAAlCA,0DAAkC;;;;;IAetDA,yBAA8B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;;IAgB7CA,0BAAkC;IAC5BA,YAAY;IAAAA,iBAAK;IACrBA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,aAAoB;IAAAA,iBAAK;IAC7BA,2BAAI;IAA6EA;MAAA;MAAA;MAAA;MAAA,OAAWA,2CAAkB;IAAA,EAAC;IAACA,qBAAI;IAAAA,iBAAS;IAC7HA,2BAAI;IAAgCA,8BAAa;IAAAA,iBAAS;;;;IANtDA,eAAY;IAAZA,+BAAY;IACZA,eAAc;IAAdA,iCAAc;IACdA,eAAsB;IAAtBA,yCAAsB;IACtBA,eAAqB;IAArBA,yCAAqB;IACrBA,eAAoB;IAApBA,uCAAoB;;;;;IAlB9BA,iCAAyF;IAG/EA,kBAAE;IAAAA,iBAAK;IACXA,0BAAI;IAAAA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,8BAAa;IAAAA,iBAAK;IACtBA,2BAAI;IAAAA,4BAAW;IAAAA,iBAAK;IACpBA,sBAAS;IAEXA,iBAAK;IAEPA,8BAAO;IACLA,8EAQK;IACPA,iBAAQ;;;;IATcA,gBAAY;IAAZA,0CAAY;;;;;;;;ADzCpC,OAAM,MAAOC,kBAAkB;EAU7BC,YAAoBC,WAAwB,EAAEC,IAAgB,EAAsBC,OAAe;IAA/E,gBAAW,GAAXF,WAAW;IATxB,cAAS,GAAe,EAAE;IACjC;IACO,YAAO,GAAW,CAAC;IAC1B,qBAAgB,GAAW,KAAK;IAIhC,cAAS,GAAG,KAAK;IAGfC,IAAI,CAACE,GAAG,CAAaD,OAAO,GAAG,UAAU,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC5D,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEA,IAAIE,CAAC;IAAK,OAAO,IAAI,CAACC,QAAQ,CAACC,QAAQ;EAAE;EACzCC,QAAQ;IAEN,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB;IACA,IAAI,IAAI,CAACH,QAAQ,CAACI,OAAO,EAAE;MACzB;;IAEF;IACA,IAAI,IAAI,CAACD,SAAS,EAAE;MAClBE,KAAK,CAAC,SAAS,CAAC;;EAGpB;EACAC,QAAQ;IACN;IACA,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACV,WAAW,CAACiB,KAAK,CAAC;MACrCC,UAAU,EAAE,CAAC,EAAE,EAAE,CAACtB,UAAU,CAACuB,QAAQ,EAAEvB,UAAU,CAACwB,GAAG,CAAC,GAAG,CAAC,EAAExB,UAAU,CAACyB,GAAG,CAAC,CAAC,CAAC,CAAC;KAC/E,CAAC;EACJ;EAEAC,UAAU,CAACC,EAAU;IACnB,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,OAAO,GAAGF,EAAE;EACnB;EAEOG,IAAI,CAACH,EAAS,GAErB;EAEOI,YAAY,CAACJ,EAAU,GAE9B;;AAhDWzB,kBAAkB;mBAAlBA,kBAAkB,kGAU2C,UAAU;AAAA;AAVvEA,kBAAkB;QAAlBA,kBAAkB;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR/BnC,6BAAoB;MAAAA,yBAAS;MAAAA,iBAAK;MAElCA,yBAAG;MAAAA,6CAA6B;MAAAA,iBAAI;MAGpCA,8BAAyG;MAIzCA,+BAAe;MAAAA,iBAAK;MAC5EA,6BAA4F;MAC9FA,iBAAM;MACNA,+BAAwB;MACOA;QAAA,OAAYoC,cAAU;MAAA,EAAC;MAClDpC,+BAAkB;MAC2BA,4BAAW;MAAAA,iBAAQ;MAC9DA,6BAAsJ;MACtJA,sEAEM;MACNA,kCAA6C;MAAxBA;QAAA;MAAA,EAAqB;MAA1CA,iBAA6C;MAG/CA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;MAGjEA,gCAA0B;MAC8CA,sBAAK;MAAAA,iBAAS;MAM5FA,kEAAqD;MAGrDA,2EAuBQ;;;MA9CMA,gBAAsB;MAAtBA,wCAAsB;MAG+CA,eAA8D;MAA9DA,8FAA8D;MAC/HA,eAAsC;MAAtCA,+DAAsC;MAGvBA,eAAqB;MAArBA,qCAAqB;MAalDA,eAAwB;MAAxBA,6EAAwB;MAGqCA,eAAsB;MAAtBA,2CAAsB","names":["Validators","i0","FetchDataComponent","constructor","formBuilder","http","baseUrl","get","subscribe","result","employees","error","console","f","WorkForm","controls","onSubmit","submitted","invalid","alert","ngOnInit","group","DaysWorked","required","max","min","showDialog","id","displayWorkModal","modalId","work","takeVacation","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Jeremy\\Source\\Repos\\LCVacation\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts","C:\\Users\\Jeremy\\Source\\Repos\\LCVacation\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public employees: Employee[] = [];\r\n  //Form Validables\r\n  public modalId: number = 0;\r\n  displayWorkModal:boolean = false;\r\n\r\n  WorkForm!: FormGroup;\r\n  VacationForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<Employee[]>(baseUrl + 'Employee').subscribe(result => {\r\n      this.employees = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  get f() { return this.WorkForm.controls; }\r\n  onSubmit() {\r\n\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.WorkForm.invalid) {\r\n      return;\r\n    }\r\n    //True if all the fields are filled\r\n    if (this.submitted) {\r\n      alert(\"Great!!\");\r\n    }\r\n\r\n  }\r\n  ngOnInit() {\r\n    //Add User form validations\r\n    this.WorkForm = this.formBuilder.group({\r\n      DaysWorked: ['', [Validators.required, Validators.max(260), Validators.min(0)]],\r\n    });\r\n  }\r\n\r\n  showDialog(id: number) {\r\n    this.displayWorkModal = true;\r\n    this.modalId = id;\r\n  }\r\n\r\n  public work(id:number) {\r\n\r\n  }\r\n\r\n  public takeVacation(id: number) {\r\n\r\n  }\r\n\r\n}\r\n\r\ninterface Employee {\r\n  id: number;\r\n  name: string;\r\n  employeeType:string;\r\n  vacationDays: number;\r\n  daysWorked: number;\r\n}\r\n","<h1 id=\"tableLabel\">Employees</h1>\r\n\r\n<p>Sample Employees for exercise</p>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"WorkModal\" tabindex=\"-1\" aria-labelledby=\"WorkModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title text-danger\" id=\"WorkModalLabel\">Work Entry Form</h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"WorkForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"DaysWorked\" class=\"form-label\">Days Worked</label>\r\n            <input type=\"number\" formControlName=\"DaysWorked\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.DaysWorked.errors }\" id=\"DaysWorked\">\r\n            <div *ngIf=\"submitted && f.DaysWorked.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.DaysWorked.errors.required\">Days Worked is required</div>\r\n            </div>\r\n            <input type=\"number\" [(ngModel)]=\"modalId\" />\r\n          </div>\r\n\r\n          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-warning\" data-bs-dismiss=\"modal\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<p *ngIf=\"!employees?.length\"><em>Loading...</em></p>\r\n\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"employees.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Vacation days</th>\r\n      <th>Days Worked</th>\r\n      <th></th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let emp of employees\">\r\n      <td>{{ emp.id }}</td>\r\n      <td>{{ emp.name }}</td>\r\n      <td>{{ emp.employeeType }}</td>\r\n      <td>{{ emp.vacationDays}}</td>\r\n      <td>{{ emp.daysWorked }}</td>\r\n      <td><button mat-raised-button data-bs-toggle=\"modal\" data-bs-target=\"#WorkModal\" (onclick)=\"setModalId(emp.id)\">Work</button></td>\r\n      <td><button class=\"btn btn-primary\">Take Vacation</button></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}