{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_div_21_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_21_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, FetchDataComponent_div_21_div_1_Template, 2, 0, \"div\", 1);\n    i0.ɵɵtemplate(2, FetchDataComponent_div_21_div_2_Template, 2, 0, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.email.errors.email);\n  }\n}\nfunction FetchDataComponent_div_26_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, FetchDataComponent_div_26_div_1_Template, 2, 0, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.password.errors.required);\n  }\n}\nfunction FetchDataComponent_table_32_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 25);\n    i0.ɵɵtext(13, \"Work\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 26);\n    i0.ɵɵtext(16, \"Take Vacation\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const emp_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r8.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r8.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r8.employeeType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r8.vacationDays);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r8.daysWorked);\n  }\n}\nfunction FetchDataComponent_table_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 23)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Vacation days\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Days Worked\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"th\")(14, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"tbody\");\n    i0.ɵɵtemplate(16, FetchDataComponent_table_32_tr_16_Template, 17, 5, \"tr\", 24);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.employees);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class FetchDataComponent {\n  constructor(formBuilder, http, baseUrl) {\n    this.formBuilder = formBuilder;\n    this.employees = [];\n    this.submitted = false;\n    http.get(baseUrl + 'Employee').subscribe(result => {\n      this.employees = result;\n    }, error => console.error(error));\n  }\n  //Add user form actions\n  get f() {\n    return this.registerForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    //True if all the fields are filled\n    if (this.submitted) {\n      alert(\"Great!!\");\n    }\n  }\n  work(id) {}\n  takeVacation(id) {}\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 33,\n  vars: 11,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [1, \"container\", \"p-5\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal2\", 1, \"btn\", \"btn-primary\"], [\"id\", \"exampleModal2\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModal2Label\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModal2Label\", 1, \"modal-title\", \"text-danger\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"inputEmail4\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"inputPassword4\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-warning\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\"], [1, \"btn\", \"btn-primary\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Employees\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"Sample Employees for exercise\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"button\", 3);\n      i0.ɵɵtext(7, \" Login Form \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"div\", 6)(11, \"div\", 7)(12, \"h5\", 8);\n      i0.ɵɵtext(13, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 10)(16, \"form\", 11);\n      i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_Template_form_ngSubmit_16_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(17, \"div\", 12)(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 14);\n      i0.ɵɵtemplate(21, FetchDataComponent_div_21_Template, 3, 2, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 12)(23, \"label\", 16);\n      i0.ɵɵtext(24, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 17);\n      i0.ɵɵtemplate(26, FetchDataComponent_div_26_Template, 2, 1, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 18);\n      i0.ɵɵtext(28, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\", 19)(30, \"button\", 20);\n      i0.ɵɵtext(31, \"Close\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(32, FetchDataComponent_table_32_Template, 17, 1, \"table\", 21);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.employees == null ? null : ctx.employees.length));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.email.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.employees.length);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","FetchDataComponent","constructor","formBuilder","http","baseUrl","get","subscribe","result","employees","error","console","f","registerForm","controls","onSubmit","submitted","invalid","alert","work","id","takeVacation","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Jeremy\\Source\\Repos\\LCVacation\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","C:\\Users\\Jeremy\\Source\\Repos\\LCVacation\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Employees</h1>\r\n\r\n<p>Sample Employees for exercise</p>\r\n\r\n<p *ngIf=\"!employees?.length\"><em>Loading...</em></p>\r\n\r\n<div class=\"container p-5\">\r\n  <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal2\">\r\n    Login Form\r\n  </button>\r\n\r\n</div>\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal2\" tabindex=\"-1\" aria-labelledby=\"exampleModal2Label\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title text-danger\" id=\"exampleModal2Label\">Login Form</h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail4\">\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n              <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"inputPassword4\">\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-warning\" data-bs-dismiss=\"modal\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"employees.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Vacation days</th>\r\n      <th>Days Worked</th>\r\n      <th></th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let emp of employees\">\r\n      <td>{{ emp.id }}</td>\r\n      <td>{{ emp.name }}</td>\r\n      <td>{{ emp.employeeType }}</td>\r\n      <td>{{ emp.vacationDays}}</td>\r\n      <td>{{ emp.daysWorked }}</td>\r\n      <td><button mat-raised-button>Work</button></td>\r\n      <td><button class=\"btn btn-primary\">Take Vacation</button></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public employees: Employee[] = [];\r\n  //Form Validables\r\n  registerForm!: FormGroup;\r\n  submitted = false;\r\n  constructor(private formBuilder: FormBuilder, http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<Employee[]>(baseUrl + 'Employee').subscribe(result => {\r\n      this.employees = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  //Add user form actions\r\n  get f() { return this.registerForm.controls; }\r\n  onSubmit() {\r\n\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    //True if all the fields are filled\r\n    if (this.submitted) {\r\n      alert(\"Great!!\");\r\n    }\r\n\r\n  }\r\n\r\n  public work(id:number) {\r\n\r\n  }\r\n\r\n  public takeVacation(id: number) {\r\n\r\n  }\r\n\r\n}\r\n\r\ninterface Employee {\r\n  id: number;\r\n  name: string;\r\n  employeeType:string;\r\n  vacationDays: number;\r\n  daysWorked: number;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}