{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet FetchDataComponent = class FetchDataComponent {\n  constructor(formBuilder, http, baseUrl) {\n    this.formBuilder = formBuilder;\n    this.employees = [];\n    //Form Validables\n    this.modalId = 0;\n    this.displayWorkModal = false;\n    this.submitted = false;\n    http.get(baseUrl + 'Employee').subscribe(result => {\n      this.employees = result;\n    }, error => console.error(error));\n  }\n  get f() {\n    return this.WorkForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.WorkForm.invalid) {\n      return;\n    }\n    //True if all the fields are filled\n    if (this.submitted) {\n      alert(\"Great!!\");\n    }\n  }\n  ngOnInit() {\n    //Add User form validations\n    this.WorkForm = this.formBuilder.group({\n      DaysWorked: ['', [Validators.required, Validators.max(260), Validators.min(0)]]\n    });\n  }\n  prepDialog(id) {\n    this.modalId = id;\n    alert(this.modalId);\n  }\n  work(id) {}\n  takeVacation(id) {}\n};\nFetchDataComponent = __decorate([Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html'\n}), __param(2, Inject('BASE_URL'))], FetchDataComponent);\nexport { FetchDataComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAM5D,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAU7BC,YAAoBC,WAAwB,EAAEC,IAAgB,EAAsBC,OAAe;IAA/E,gBAAW,GAAXF,WAAW;IATxB,cAAS,GAAe,EAAE;IACjC;IACO,YAAO,GAAW,CAAC;IAC1B,qBAAgB,GAAW,KAAK;IAIhC,cAAS,GAAG,KAAK;IAGfC,IAAI,CAACE,GAAG,CAAaD,OAAO,GAAG,UAAU,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC5D,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEA,IAAIE,CAAC;IAAK,OAAO,IAAI,CAACC,QAAQ,CAACC,QAAQ;EAAE;EACzCC,QAAQ;IAEN,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB;IACA,IAAI,IAAI,CAACH,QAAQ,CAACI,OAAO,EAAE;MACzB;;IAEF;IACA,IAAI,IAAI,CAACD,SAAS,EAAE;MAClBE,KAAK,CAAC,SAAS,CAAC;;EAGpB;EACAC,QAAQ;IACN;IACA,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACV,WAAW,CAACiB,KAAK,CAAC;MACrCC,UAAU,EAAE,CAAC,EAAE,EAAE,CAACrB,UAAU,CAACsB,QAAQ,EAAEtB,UAAU,CAACuB,GAAG,CAAC,GAAG,CAAC,EAAEvB,UAAU,CAACwB,GAAG,CAAC,CAAC,CAAC,CAAC;KAC/E,CAAC;EACJ;EAEAC,UAAU,CAACC,EAAU;IACnB,IAAI,CAACC,OAAO,GAAGD,EAAE;IACjBR,KAAK,CAAC,IAAI,CAACS,OAAO,CAAC;EACrB;EAEOC,IAAI,CAACF,EAAS,GAErB;EAEOG,YAAY,CAACH,EAAU,GAE9B;CAED;AAlDYzB,kBAAkB,eAJ9BH,SAAS,CAAC;EACTgC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE;CACd,CAAC,EAWiEC,iBAAM,CAAC,UAAU,CAAC,IAVxE/B,kBAAkB,CAkD9B;SAlDYA,kBAAkB","names":["Component","Inject","Validators","FetchDataComponent","constructor","formBuilder","http","baseUrl","get","subscribe","result","employees","error","console","f","WorkForm","controls","onSubmit","submitted","invalid","alert","ngOnInit","group","DaysWorked","required","max","min","prepDialog","id","modalId","work","takeVacation","selector","templateUrl","__param"],"sourceRoot":"","sources":["C:\\Users\\Jeremy\\Source\\Repos\\LCVacation\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public employees: Employee[] = [];\r\n  //Form Validables\r\n  public modalId: number = 0;\r\n  displayWorkModal:boolean = false;\r\n\r\n  WorkForm!: FormGroup;\r\n  VacationForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<Employee[]>(baseUrl + 'Employee').subscribe(result => {\r\n      this.employees = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  get f() { return this.WorkForm.controls; }\r\n  onSubmit() {\r\n\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.WorkForm.invalid) {\r\n      return;\r\n    }\r\n    //True if all the fields are filled\r\n    if (this.submitted) {\r\n      alert(\"Great!!\");\r\n    }\r\n\r\n  }\r\n  ngOnInit() {\r\n    //Add User form validations\r\n    this.WorkForm = this.formBuilder.group({\r\n      DaysWorked: ['', [Validators.required, Validators.max(260), Validators.min(0)]],\r\n    });\r\n  }\r\n\r\n  prepDialog(id: number) {\r\n    this.modalId = id;\r\n    alert(this.modalId);\r\n  }\r\n\r\n  public work(id:number) {\r\n\r\n  }\r\n\r\n  public takeVacation(id: number) {\r\n\r\n  }\r\n\r\n}\r\n\r\ninterface Employee {\r\n  id: number;\r\n  name: string;\r\n  employeeType:string;\r\n  vacationDays: number;\r\n  daysWorked: number;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}