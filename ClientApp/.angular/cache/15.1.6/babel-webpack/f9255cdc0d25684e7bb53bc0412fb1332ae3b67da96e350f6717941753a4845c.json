{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'appplication/json'\n  })\n};\nexport class EmployeeService {\n  constructor(http, baseUrl) {\n    this.employees = [];\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  ngOnInit() {}\n  getEmployees() {\n    const apiURL = this.baseUrl + 'Employee/getEmployees';\n    return this.http.get(apiURL).pipe();\n    map(res => res);\n  }\n  work(days, id) {\n    const apiURL = this.baseUrl + 'Employee/Work';\n    const formData = new FormData();\n    formData.append(\"id\", id.toString());\n    formData.append(\"days\", days.toString());\n    return this.http.post(apiURL, formData).pipe(map(res => res));\n  }\n  vacation(days, id) {\n    const apiURL = this.baseUrl + 'Employee/TakeVacation';\n    const formData = new FormData();\n    formData.append(\"id\", id.toString());\n    formData.append(\"days\", days.toString());\n    return this.http.post(apiURL, formData).pipe(map(res => res));\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAAoCC,GAAG,QAAwB,MAAM;;;AAIrE,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAQD,OAAM,MAAOI,eAAe;EAK1BC,YAAYC,IAAgB,EAAsBC,OAAe;IAJjE,cAAS,GAAe,EAAE;IAKxB,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;EAExB;EAEAC,QAAQ,IAER;EAEAC,YAAY;IACV,MAAMC,MAAM,GAAG,IAAI,CAACH,OAAO,GAAG,uBAAuB;IAErD,OAAO,IAAI,CAACD,IAAI,CAACK,GAAG,CAAaD,MAAM,CAAC,CAACE,IAAI,EAC5C;IACEX,GAAG,CAAEY,GAAe,IAAKA,GAAG,CAAC;EAClC;EAEAC,IAAI,CAACC,IAAY,EAAEC,EAAU;IAC3B,MAAMN,MAAM,GAAG,IAAI,CAACH,OAAO,GAAG,eAAe;IAE7C,MAAMU,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,IAAI,EAAEH,EAAE,CAACI,QAAQ,EAAE,CAAC;IACpCH,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAACK,QAAQ,EAAE,CAAC;IAExC,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAaX,MAAM,EAAEO,QAAQ,CAAC,CAACL,IAAI,CACtDX,GAAG,CAAEY,GAAe,IAAKA,GAAG,CAAC,CAC9B;EACH;EAEAS,QAAQ,CAACP,IAAY,EAAEC,EAAU;IAC/B,MAAMN,MAAM,GAAG,IAAI,CAACH,OAAO,GAAG,uBAAuB;IAErD,MAAMU,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,IAAI,EAAEH,EAAE,CAACI,QAAQ,EAAE,CAAC;IACpCH,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAACK,QAAQ,EAAE,CAAC;IAGxC,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAaX,MAAM,EAAEO,QAAQ,CAAC,CAACL,IAAI,CACpDX,GAAG,CAAEY,GAAe,IAAKA,GAAG,CAAC,CAC9B;EACL;;AA9CWT,eAAe;mBAAfA,eAAe,0CAKY,UAAU;AAAA;AALrCA,eAAe;SAAfA,eAAe;EAAAmB,SAAfnB,eAAe;EAAAoB,YADF;AAAM","names":["HttpHeaders","map","httpOptions","headers","EmployeeService","constructor","http","baseUrl","ngOnInit","getEmployees","apiURL","get","pipe","res","work","days","id","formData","FormData","append","toString","post","vacation","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Jeremy\\Source\\Repos\\LCVacation\\ClientApp\\src\\app\\employee.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Inject, NgModule } from \"@angular/core\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { catchError, lastValueFrom, map, Observable, of } from \"rxjs\";\r\nimport { __values } from \"tslib\";\r\nimport { Employee } from \"./Employee\";\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'appplication/json'\r\n  }) \r\n}\r\n\r\nexport interface EmployeesResponse {\r\n  data: Employee[];\r\n  // Add other backend response properties here if present\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EmployeeService {\r\n  employees: Employee[] = [];\r\n  http: HttpClient;\r\n  baseUrl: string;\r\n \r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  getEmployees(): Observable<Employee[]> {\r\n    const apiURL = this.baseUrl + 'Employee/getEmployees';\r\n   \r\n    return this.http.get<Employee[]>(apiURL).pipe(\r\n    ); \r\n       map((res: Employee[]) => res)\r\n  }\r\n\r\n  work(days: number, id: number): Observable<Employee[]> {\r\n    const apiURL = this.baseUrl + 'Employee/Work';\r\n    \r\n    const formData = new FormData();\r\n    formData.append(\"id\", id.toString())\r\n    formData.append(\"days\", days.toString());\r\n    \r\n    return this.http.post<Employee[]>(apiURL, formData).pipe(\r\n      map((res: Employee[]) => res)\r\n    );\r\n  }\r\n\r\n  vacation(days: number, id: number): Observable<Employee[]> {\r\n    const apiURL = this.baseUrl + 'Employee/TakeVacation';\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"id\", id.toString())\r\n    formData.append(\"days\", days.toString());\r\n\r\n\r\n    return this.http.post<Employee[]>(apiURL, formData).pipe(\r\n        map((res: Employee[]) => res)\r\n      );\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}