{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./nav-menu/nav-menu.component\";\nfunction AppComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AppComponent_div_16_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, AppComponent_div_16_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.errors.email);\n  }\n}\nfunction AppComponent_div_21_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AppComponent_div_21_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.required);\n  }\n}\nfunction AppComponent_div_40_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_40_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AppComponent_div_40_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, AppComponent_div_40_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.email.errors.email);\n  }\n}\nfunction AppComponent_div_45_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AppComponent_div_45_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.password.errors.required);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class AppComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.title = 'app';\n    this.submitted = false;\n  }\n  //Add user form actions\n  get f() {\n    return this.registerForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    //True if all the fields are filled\n    if (this.submitted) {\n      alert(\"Great!!\");\n    }\n  }\n  ngOnInit() {\n    //Add User form validations\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 52,\n  vars: 18,\n  consts: [[1, \"container\"], [\"id\", \"exampleModal2\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModal2Label\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModal2Label\", 1, \"modal-title\", \"text-danger\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"inputEmail4\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"inputPassword4\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-warning\"], [\"id\", \"WorkModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"WorkModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"WorkModalLabel\", 1, \"modal-title\", \"text-danger\"], [\"type\", \"number\", \"formControlName\", \"DaysWorked\", \"id\", \"inputEmail4\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\");\n      i0.ɵɵelement(1, \"app-nav-menu\");\n      i0.ɵɵelementStart(2, \"main\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"h5\", 5);\n      i0.ɵɵtext(8, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"button\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 11);\n      i0.ɵɵtemplate(16, AppComponent_div_16_Template, 3, 2, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 9)(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 14);\n      i0.ɵɵtemplate(21, AppComponent_div_21_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 15);\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 16)(25, \"button\", 17);\n      i0.ɵɵtext(26, \"Close\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(27, \"div\", 18)(28, \"div\", 2)(29, \"div\", 3)(30, \"div\", 4)(31, \"h5\", 19);\n      i0.ɵɵtext(32, \"Work Entry Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"button\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 7)(35, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_35_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(36, \"div\", 9)(37, \"label\", 10);\n      i0.ɵɵtext(38, \"Days Worked\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 20);\n      i0.ɵɵtemplate(40, AppComponent_div_40_Template, 3, 2, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 9)(42, \"label\", 13);\n      i0.ɵɵtext(43, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 14);\n      i0.ɵɵtemplate(45, AppComponent_div_45_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"button\", 15);\n      i0.ɵɵtext(47, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(48, \"div\", 16)(49, \"button\", 17);\n      i0.ɵɵtext(50, \"Close\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(51, \"router-outlet\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.submitted && ctx.f.email.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.submitted && ctx.f.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.submitted && ctx.f.email.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.submitted && ctx.f.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterOutlet, i4.NavMenuComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AppComponent","constructor","formBuilder","f","registerForm","controls","onSubmit","submitted","invalid","alert","ngOnInit","group","email","required","password","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Jeremy\\Source\\Repos\\LCVacation\\ClientApp\\src\\app\\app.component.ts","C:\\Users\\Jeremy\\Source\\Repos\\LCVacation\\ClientApp\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  registerForm!: FormGroup;\r\n  submitted = false;\r\n  constructor(private formBuilder: FormBuilder) { }\r\n  //Add user form actions\r\n  get f() { return this.registerForm.controls; }\r\n  onSubmit() {\r\n\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    //True if all the fields are filled\r\n    if (this.submitted) {\r\n      alert(\"Great!!\");\r\n    }\r\n\r\n  }\r\n  ngOnInit() {\r\n    //Add User form validations\r\n    this.registerForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]],\r\n    });\r\n  }\r\n}\r\n\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <main class=\"container\">\r\n    \r\n    <!-- Modal -->\r\n    <div class=\"modal fade\" id=\"exampleModal2\" tabindex=\"-1\" aria-labelledby=\"exampleModal2Label\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title text-danger\" id=\"exampleModal2Label\">Login Form</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n                <input type=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail4\">\r\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                  <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"inputPassword4\">\r\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-warning\" data-bs-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Modal -->\r\n    <div class=\"modal fade\" id=\"WorkModal\" tabindex=\"-1\" aria-labelledby=\"WorkModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title text-danger\" id=\"WorkModalLabel\">Work Entry Form</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"exampleInputEmail1\" class=\"form-label\">Days Worked</label>\r\n                <input type=\"number\" formControlName=\"DaysWorked\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail4\">\r\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                  <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"inputPassword4\">\r\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-warning\" data-bs-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n</body>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}